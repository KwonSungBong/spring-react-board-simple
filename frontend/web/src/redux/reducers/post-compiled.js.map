{"version":3,"sources":["post.js"],"names":[],"mappings":"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","file":"post-compiled.js","sourcesContent":["/**\n * Created by 권성봉 on 2016. 8. 1..\n */\nconst FIND_ALL = \"post/FIND\";\nconst FIND_ALL_SUCCESS = \"post/FIND_ALL_SUCCESS\";\nconst FIND_ALL_FAIL = \"post/FIND_ALL_FAIL\";\n\nconst FIND_LIST = \"post/FIND_LIST\";\nconst FIND_LIST_SUCCESS = \"post/FIND_LIST_SUCCESS\";\nconst FIND_LIST_FAIL = \"post/FIND_LIST_FAIL\";\n\nconst FIND_ONE = \"post/FIND_ONE\";\nconst FIND_ONE_SUCCESS = \"post/FIND_ONE_SUCCESS\";\nconst FIND_ONE_FAIL = \"post/FIND_ONE_FAIL\";\n\nconst RESET_ONE = \"post/RESET_ONE\";\n\nconst CREATE = \"post/CREATE\";\nconst CREATE_SUCCESS = \"post/CREATE_SUCCESS\";\nconst CREATE_FAIL = \"post/CREATE_FAIL\";\n\nconst UPDATE = \"post/UPDATE\";\nconst UPDATE_SUCCESS = \"post/UPDATE_SUCCESS\";\nconst UPDATE_FAIL = \"post/UPDATE_FAIL\";\n\nconst REMOVE = \"post/REMOVE\";\nconst REMOVE_SUCCESS = \"post/REMOVE_SUCCESS\";\nconst REMOVE_FAIL = \"post/REMOVE_FAIL\";\n\nconst initialState = {\n    loading: false,\n    postList: {},\n    post: {}\n};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type){\n        case FIND_ALL:\n            return {\n                ...state,\n                loading: true\n            };\n        case FIND_ALL_SUCCESS:\n            return {\n                ...state,\n                postList: action.result,\n                loading: false\n            };\n        case FIND_ALL_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case FIND_LIST:\n            return {\n                ...state,\n                loading: true\n            }\n        case FIND_LIST_SUCCESS:\n            return {\n                ...state,\n                postList: action.result,\n                loading: false\n            }\n        case FIND_LIST_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case FIND_ONE:\n            return {\n                ...state,\n                loading: true\n            }\n        case FIND_ONE_SUCCESS:\n            return {\n                ...state,\n                post: action.result,\n                loading: false\n            }\n        case FIND_ONE_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case RESET_ONE:\n            return {\n                ...state,\n                post: {}\n            }\n        case CREATE:\n            return {\n                ...state,\n                loading: true\n            }\n        case CREATE_SUCCESS:\n            return {\n                ...state,\n                loading: true\n            }\n        case CREATE_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case UPDATE:\n            return {\n                ...state,\n                loading: true\n            }\n        case UPDATE_SUCCESS:\n            return {\n                ...state,\n                loading: false\n            }\n        case UPDATE_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case REMOVE:\n            return {\n                ...state,\n                loading: true\n            }\n        case REMOVE_SUCCESS:\n            return {\n                ...state,\n                postList: Object.assign({}, state.postList, {\n                    content: state.postList.content.filter(post =>\n                    post.idx !== action.idx)\n                }),\n                loading: false\n            }\n        case REMOVE_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport function findAll(){\n    return {\n        types: [FIND_ALL, FIND_ALL_SUCCESS, FIND_ALL_FAIL],\n        promise: (client) => client.get('/post/findAll')\n    }\n}\n\nexport function findList(page = 0){\n    return {\n        types: [FIND_LIST, FIND_LIST_SUCCESS, FIND_LIST_FAIL],\n        promise: (client) => client.get('/post?page=' + page)\n    }\n}\n\nexport function findOne(idx){\n    return {\n        types: [FIND_ONE, FIND_ONE_SUCCESS, FIND_ONE_FAIL],\n        promise: (client) => client.get('/post/' + idx)\n    }\n}\n\nexport function resetOne(){\n    return {\n        type: RESET_ONE\n    }\n}\n\nexport function create(post){\n    return {\n        types: [CREATE, CREATE_SUCCESS, CREATE_FAIL],\n        promise: (client) => client.post('/post', {\n            data: post\n        })\n    }\n}\n\nexport function update(post){\n    let attach;\n\n    if(post.file && post.file.file){\n        attach = [];\n        attach.push(data.file.file);\n        post.file.previewUrl = '';\n    }\n\n    return {\n        types: [UPDATE, UPDATE_SUCCESS, UPDATE_FAIL],\n        promise: (client) => client.patch('/post', {\n            data: post\n        })\n    }\n}\n\nexport function remove(idx){\n    return {\n        types: [REMOVE, REMOVE_SUCCESS, REMOVE_FAIL],\n        promise: (client) => client.del('/post/' + idx),\n        idx: idx\n    }\n}\n"]}